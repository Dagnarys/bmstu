# Generated by Django 4.2.5 on 2023-12-05 14:31

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('is_moderator', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(default='Иванов Иван Иванович', max_length=255, verbose_name='ФИО')),
                ('birth_date', models.DateField(default='1999-01-01', verbose_name='Дата рождения')),
                ('address', models.CharField(default='Москва', max_length=255, verbose_name='Адрес')),
                ('phone_number', models.CharField(default='+7-999-999-99-99', max_length=17, verbose_name='Телефон')),
                ('email', models.CharField(default='asd@gmail.com', max_length=255, verbose_name='Емейл')),
                ('driver_license_number', models.CharField(default='9999 999999', max_length=20, verbose_name='ВУ')),
                ('issue_date', models.DateField(default='2020-05-05', verbose_name='Дата получения')),
                ('expiration_date', models.DateField(default='2050-05-05', verbose_name='Срок действия до')),
                ('passport_number', models.CharField(default='9999 999999', max_length=11, verbose_name='Паспорт')),
                ('status', models.IntegerField(choices=[(1, 'Действует'), (2, 'Удалена')], default=1, verbose_name='Статус')),
                ('image', models.ImageField(default='drivers/img1.png', upload_to='drivers', verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Водитель',
                'verbose_name_plural': 'Водители',
            },
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_insurance', models.CharField(default='xx123xx123', max_length=10, verbose_name='Номер страховки')),
                ('start_date', models.DateField(default=datetime.datetime(2023, 12, 5, 17, 31, 20, 418478), verbose_name='Дата начала')),
                ('end_date', models.DateField(default=datetime.datetime(2024, 12, 4, 17, 31, 20, 418492), verbose_name='Дата конца')),
                ('premium_amount', models.FloatField(default=0, verbose_name='Сумма')),
                ('insurance_type', models.BooleanField(default=0, verbose_name='Тип страхования')),
                ('status', models.IntegerField(choices=[(1, 'Введён'), (2, 'В работе'), (3, 'Завершён'), (4, 'Отменён'), (5, 'Удалён')], default=1, verbose_name='Статус')),
                ('date_created', models.DateTimeField(default=datetime.datetime(2023, 12, 5, 14, 31, 20, 418525, tzinfo=datetime.timezone.utc), verbose_name='Дата создания')),
                ('date_of_formation', models.DateTimeField(blank=True, null=True, verbose_name='Дата формирования')),
                ('date_complete', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
                ('vehicle_make', models.CharField(default='', max_length=50, verbose_name='Марка')),
                ('vehicle_model', models.CharField(default='', max_length=50, verbose_name='Модель')),
                ('vehicle_year', models.CharField(default='', max_length=4, verbose_name='Год выпуска')),
                ('vehicle_vin', models.CharField(default='', max_length=17, verbose_name='VIN')),
                ('vehicle_license_plate', models.CharField(default='', max_length=10, verbose_name='Гос. номер')),
                ('drivers', models.ManyToManyField(null=True, to='insurances.driver', verbose_name='Водители')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Страховка',
                'verbose_name_plural': 'Страховки',
                'ordering': ('-date_of_formation',),
            },
        ),
    ]
